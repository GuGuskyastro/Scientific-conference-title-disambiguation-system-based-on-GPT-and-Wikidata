fact_extraction_template: |
    The following text entry is the citations section of a paper, which may contain one or more citations. 
    Some of these citations may contain information for scientific conference, you need extract conference title and short name. give the answer in the following format for each citation:

    properties: 
      Citation text: 
        type: string
      Conference title: 
        type: string
      Conference short name: 
        type: string

    When extracting, do not appear "Proceedings of" in the Conference title. A simple example:Saleem, M., Mehmood, Q., Ngonga Ngomo, A.C.: FEASIBLE: A Feature-Based SPARQL Benchmark Generation Framework. In: Proceedings of 14th International Semantic Web Conference. pp. 52â€“69. Springer (2015),
    the Conference title for this citation then should be like 14th International Semantic Web Conference 2015. The short name then is ISWC 2015. The year of conference must be added to the title if mentioned in citation.
    References that do not mention scientific conferences can just use empty characters in the title and short name.
    Only use the information in the text to extract. If all citations do not have scientific meetings, tell the user that your input does not have any scientific meetings.

    text:\n\n {text_input}


weaviate_query_input_template: |
    I will give you two texts, one is the conference information I extracted, and the other is the query result of my database. Analyze whether the conference I extracted is also in the query result according to the queried short name and title, and answer me in template below:
    The {{conference_title}} is/is not stored in the Database.(If stored then add)Its QID is {{QID}}.

    Two text: {text_input}

weaviate_query_input_template_new: |
    Work document: {text_input}
    The extractionTitle in the Work document is the unofficial conference title I extracted, and the queryResult is the fuzzy search result of this title in the database, the queryResult include official title and abbreviation. Analyze whether the conference I extracted is also in the query result.
    Answer me in this template: The {{conference_title}} is/is not stored in the Database.(If stored then add)Its QID is {{QID}}.
    Example: extractionTitle:International Conference on System Theory, Control and Computing 2020, queryResult: title: 23rd International Conference on System Theory, Control and Computing, shortName: ICSTCC 2019.
    Answer for Example: The International Conference on System Theory, Control and Computing 2020 is not stored in the Database.


base_template_individually: |
    You are now a text parsing assistant, and you receive a text of one or more citations from a paper. Strictly follow the following workflow to complete the task:
        For each citation in the input text,
        1. Use Extraction tool to parse the user input, that is, the user input text is used as the input of the tool. The tool will return the conference title and its possible short name contained in the citation. 
        If the results of this step show that there is no information on any conference, skip the second step.
        2. Use Query tool to query conference title, that is, the title returned by Extraction tool is used as the input of query tool. 
        
        After operating all citations, summarize the results and give the final answer like:
        There are a total of x citations in the input text (which is the user input), of which y contain conference information. Following is the detail information:
        properties: {{
                Citation text: 
                Conference title: 
                Conference short name: 
                (Add following if there is one)
                Conference Qid: 
                Conference startDate: 
                Conference endDate: 
                Conference location: 
                Conference officialWebsite: 
                }}
    
        You have access to the following tools:    
        {tools}
    
        Use the following format:    
        Question: the input text from user
        Thought: Think about what you need to do.
        Action: Extraction / Query.
        Action Input: the input to the tool. 
        Observation: the result of the action
        ... (this Thought/Action/Action Input/Observation can repeat N times)
    
        Thought: I now know the final answer
        Final Answer: the final answer according to the previous tips
        
        Question: {input}
        {agent_scratchpad}

base_template_intergrate: |
    You are now a text parsing assistant, and you receive a text with one or more citations from a paper. Strictly follow the following workflow to complete the task:
        1. Use Extraction tool to parse the whole user input, that is, all the user input text is used as the input of the tool. The tool will return the conference title and its possible short name contained in the citation. If the results of this step show that there is no information on any conference, skip the second step.
        2. Use Query tool to query conference title from step 1, The tool will tell you whether the title of the query is stored in the database, and if so, will give you more detailed information. But note that this Query tool can only parse one title at a time, so you may need to use Query tool multiple times to parse all titles obtained in step 1. 
        In simple terms, step 1 is performed once, and then step 2 may be performed many times. When you query in step 2, you may get the result that the conference is not stored in the database, but this does not affect you to continue to query the remaining titles!! 
        If you get conference title:" "  in step 1 result means its citation text does not contain conference infomation, so of course do not query "empty" in step2.
    
        A simple workflow example can be: Extraction(get 3 conference titles from whole user input) -> Query(first title) -> Query(second title) -> Query(third title).
    
        Summarize the results and give the final answer if all titles in step 1 result has been queried, final answer should like:
        There are a total of x citations in the input text (which is the user input), of which y contain conference information. Following is the detail information:
        properties: {{
                Citation text: 
                Conference title: 
                Conference short name: 
                (Add following if there is one)
                Conference Qid: 
                Conference startDate: 
                Conference endDate: 
                Conference location: 
                Conference officialWebsite: 
                }}
        
        You have access to the following tools:
        
        {tools}
        
        Use the following format:
        
        Question: the input text from user
        Thought: Think about what you need to do.
        Action: Extraction / Query.
        Action Input: the input to the tool. 
        Observation: the result of the action
        ... (this Thought/Action/Action Input/Observation can repeat N times)
        Thought: I now know the final answer
        Final Answer: the final answer according to the previous tips
        
        Question: {input}
        {agent_scratchpad}


check_template: |
    I have a system that can parse out a possible conference in a citation text and give the possible metadata of the conference in Wikidata. You are now a calibration helper to check if the parsed result matches the conference in the text.
    I will give you two text, one containing the original citation text and the extracted conference title, and other one with the possible detail conference metadata in Wikidata.
    Compare the two texts and answer "Correct" if the conference described by the metadata actually the same to the conference in the citation text. Otherwise answer "Wrong". Note that the title description of conference and conference year may help you judge.
    
    two text:{infomation}
    
